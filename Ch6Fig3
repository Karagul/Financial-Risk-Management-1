import requests
import numpy
import zipfile
import tempfile
import math
import matplotlib.mlab as mlab
import matplotlib.pyplot as plt

#get Fama French 3 factor data from French's website
FFurl='http://mba.tuck.dartmouth.edu/pages/faculty/ken.french/ftp/F-F_Research_Data_Factors_CSV.zip'
r = requests.get(FFurl, allow_redirects=True)
#Store FF zip file in a temp file
tmp = tempfile.NamedTemporaryFile(delete=True)
tmp.write(r.content)
zf=zipfile.ZipFile(tmp)
for FFfile in zf.namelist():
    FFdata = zf.read(FFfile)
tmp.close()  # deletes the temp file

#Split up the Fama-French data (after header) into words
words=repr(FFdata[162:]).split()

#Parse the Fama-French data
#dates (YYYYMM format),Mkt-RF,SMB,HML,RF
Date=[]
market_minus_rf=[]
SMB=[]
HML=[]
RF=[]
Date.append(float(words[0][2:8])/100.0)   #Extract first YYYYMM date
x=1
while True:
    market_minus_rf.append(float(words[x][0:len(words[x])-1])) 
    SMB.append(float(words[x+1][0:len(words[x+1])-1]))
    HML.append(float(words[x+2][0:len(words[x+2])-1]))
    l3=len(words[x+3])
    try:  #Next period date; this period RF
        NxtDate=int(words[x+3][l3-7:l3-1])  #Generate error if done
        Date.append(float(NxtDate)/100.0)
        RF.append(float(words[x+3][:l3-11]))
        x+=4
    except ValueError: #Last data line; remove returns and newlines
        RF.append(float(words[x+3][:l3-8]))
        break

#Change to log-returns
ActualReality=[]
for x in range(len(market_minus_rf)):
    ActualReality.append(100.0*math.log(1+\
    (market_minus_rf[x]+RF[x])/100.))
StubOffset=6
mu=numpy.average(ActualReality[StubOffset:])
sigma=numpy.std(ActualReality[StubOffset:])
        
#Generate histogram
#put infinite bins at the ends
minhist=-15
maxhist=15
stepsize=1.5
bins=[]
bins.append(float('-inf'))
bins.append(minhist)
for x in range(int((maxhist-minhist)/stepsize)):
    bins.append(bins[x+1]+stepsize)
bins.append(float('inf'))

n, bins, patches = plt.hist(\
ActualReality[StubOffset:], bins, normed=1, facecolor='blue', alpha=0.5)
 
# add a 'best fit' line
y = mlab.normpdf(bins, mu, sigma)
plt.plot(bins, y, 'r--')
#plt.xlabel('Smarts')
#plt.ylabel('Probability')
plt.title(r'Figure 3')
 
# Tweak spacing to prevent clipping of ylabel
plt.subplots_adjust(left=0.15)
plt.show()
