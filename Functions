#Function library for Financial Risk Management book

import numpy
import random
import matplotlib.pyplot as plt

#Generate sample standard deviations over lookback periods
def GenSampleSd(LogReturns,lookbacks):
    Sqrt12=12.0**0.5
    SampleSd=[]
    for lb in lookbacks:
        Sds=[]    #Save Lookback-length SD's in Sds
        for x in range(len(LogReturns)-lb):
            StdDev=numpy.std(LogReturns[x:x+lb])
            Sds.append(StdDev*Sqrt12)
        SampleSd.append(Sds)   #Add a row to SampleSd
    return(SampleSd)
#Done with GetSampleSd

#Plot a graph of sample standard deviations
def PlotSampleSd(Title,Date,SampleSd,StubOffset,lookbacks,colors):
    fig, ax = plt.subplots()
    x=0
    for lb in lookbacks:
        ax.plot(Date[lb+StubOffset:], \
        SampleSd[x][StubOffset:], colors[x], \
        label=str(lb)+' month')
    for label in ax.xaxis.get_ticklabels():
        label.set_rotation(45)
    legend = ax.legend(loc='upper right', shadow=False, fontsize='medium')
    ax.grid()

    plt.title(Title)
    plt.ylabel('Sample SDs')
    plt.axis([min(Date),max(Date),0,70])
    plt.show()
    return
#Done with PlotSampleSd
